@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#root {
  height: 100vh;
  width: 100vw;
}

/* ReactFlow improvements for smoother zoom */
.react-flow__viewport {
  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

.react-flow__node {
  transition: 
    opacity 0.2s ease-in-out,
    transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced node positioning transitions */
.react-flow__node.react-flow__node-task {
  transition: 
    opacity 0.2s ease-in-out,
    transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    box-shadow 0.2s ease-in-out;
}

/* Smooth position updates for force-directed layout */
.react-flow__node[data-layout="force"] {
  transition: 
    transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  .react-flow__viewport {
    transition: none;
  }
  
  .react-flow__node {
    transition: opacity 0.2s ease-in-out;
  }
}

/* Custom scrollbar for better UX */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #a8a8a8;
}

/* Working task animations */
@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes workingPulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.02);
  }
}

.working-shimmer {
  background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.1), transparent);
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

.working-pulse {
  animation: workingPulse 2s ease-in-out infinite;
}

/* Enhanced progress bar animations */
@keyframes progressGlow {
  0%, 100% {
    box-shadow: 0 0 5px rgba(59, 130, 246, 0.3);
  }
  50% {
    box-shadow: 0 0 15px rgba(59, 130, 246, 0.6), 0 0 25px rgba(59, 130, 246, 0.3);
  }
}

.progress-glow {
  animation: progressGlow 2s ease-in-out infinite;
}

/* Sliding progress bar animation for active tasks */
@keyframes slideRight {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(400%);
  }
}

.animate-slide-right {
  animation: slideRight 2s ease-in-out infinite;
}

/* Smooth task node animations - no content movement */
@keyframes statusChange {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.02);
  }
  50% {
    transform: scale(1.03);
  }
  75% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes completionCelebration {
  0% {
    transform: scale(1) rotate(0deg);
    filter: brightness(1);
  }
  15% {
    transform: scale(1.08) rotate(1deg);
    filter: brightness(1.1);
  }
  30% {
    transform: scale(1.05) rotate(-1deg);
    filter: brightness(1.2);
  }
  45% {
    transform: scale(1.1) rotate(0.5deg);
    filter: brightness(1.1);
  }
  60% {
    transform: scale(1.03) rotate(-0.5deg);
    filter: brightness(1.05);
  }
  100% {
    transform: scale(1) rotate(0deg);
    filter: brightness(1);
  }
}

.animate-status-change {
  animation: statusChange 0.8s ease-in-out;
}

.animate-completion-celebration {
  animation: completionCelebration 2s ease-out;
}

/* Active task border glow - no content movement */
@keyframes activeTaskBorderGlow {
  0%, 100% {
    box-shadow: 
      0 0 0 2px rgba(251, 146, 60, 0.4),
      0 0 20px rgba(251, 146, 60, 0.2),
      0 4px 12px rgba(0, 0, 0, 0.1);
  }
  50% {
    box-shadow: 
      0 0 0 3px rgba(251, 146, 60, 0.6),
      0 0 30px rgba(251, 146, 60, 0.3),
      0 6px 20px rgba(0, 0, 0, 0.15);
  }
}

.active-task-border-glow {
  animation: activeTaskBorderGlow 3s ease-in-out infinite;
}

/* Improved subtask completion flash - more subtle */
@keyframes subtaskComplete {
  0% {
    background: transparent;
  }
  30% {
    background: rgba(34, 197, 94, 0.1);
  }
  100% {
    background: transparent;
  }
}

.animate-subtask-complete {
  animation: subtaskComplete 0.6s ease-out;
}
